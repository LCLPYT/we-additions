plugins {
	id 'fabric-loom' version '1.2.7'
	id 'maven-publish'
	id 'gradle-build-utils' version '1.4.0'
}

Properties props = buildUtils.loadProperties('publish.properties')

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = buildUtils.gitVersion()
group = project.maven_group

repositories {
    mavenCentral()

    maven {
        url "https://repo.lclpnet.work/repository/internal"
    }

    maven {
        url "https://maven.enginehub.org/repo/"
    }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "com.sk89q.worldedit:worldedit-fabric-mc${project.minecraft_version}:${project.worldedit_version}"

    /* other Java dependencies */
    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release.convention(17)
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

import work.lclpnet.build.task.GithubDeploymentTask

def env = System.getenv()
tasks.register("github", GithubDeploymentTask) {
    dependsOn tasks.remapJar

    config {
        token = env.get("GITHUB_TOKEN")
        repository = env.get("GITHUB_REPOSITORY")
    }

    release {
        title = "[$project.minecraft_version] WorldEdit Additions $project.version"
        tag = buildUtils.latestTag()
    }

    assets.add(tasks.remapJar.archiveFile.get())
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = project.archives_base_name

            from components.java

            pom {
                name = 'World Edit Additions'
                description = 'A tiny mod that adds some features to world edit.'
            }
        }
    }

    repositories {
        maven {
            if (Arrays.stream("DEPLOY_URL", "DEPLOY_USER", "DEPLOY_PASSWORD").allMatch(env.&containsKey)) {
                credentials {
                    username env.get("DEPLOY_USER")
                    password env.get("DEPLOY_PASSWORD")
                }
                url env.get("DEPLOY_URL")
            }
            else if (Arrays.stream("mavenHost", "mavenUser", "mavenPassword").allMatch(props.&containsKey)) {
                credentials {
                    username props.getProperty('mavenUser')
                    password props.getProperty('mavenPassword')
                }
                url props.getProperty('mavenHost')
            } else {
                url "file:///${project.projectDir}/repo"
            }
        }
    }
}